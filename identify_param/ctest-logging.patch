diff --git a/redisson/src/main/java/org/redisson/config/BaseConfig.java b/redisson/src/main/java/org/redisson/config/BaseConfig.java
index 79ee412ba..1d1784abd 100644
--- a/redisson/src/main/java/org/redisson/config/BaseConfig.java
+++ b/redisson/src/main/java/org/redisson/config/BaseConfig.java
@@ -134,10 +134,12 @@ public class BaseConfig<T extends BaseConfig<T>> {
      */
     public T setSubscriptionsPerConnection(int subscriptionsPerConnection) {
         this.subscriptionsPerConnection = subscriptionsPerConnection;
+        log.warn("[CTEST][SET-PARAM] " + "SubscriptionsPerConnection"); //CTEST
         return (T) this;
     }
 
     public int getSubscriptionsPerConnection() {
+        log.warn("[CTEST][GET-PARAM] " + "SubscriptionsPerConnection"); //CTEST
         return subscriptionsPerConnection;
     }
 
@@ -151,10 +153,12 @@ public class BaseConfig<T extends BaseConfig<T>> {
      */
     public T setPassword(String password) {
         this.password = password;
+        log.warn("[CTEST][SET-PARAM] " + "Password"); //CTEST
         return (T) this;
     }
 
     public String getPassword() {
+        log.warn("[CTEST][GET-PARAM] " + "Password"); //CTEST
         return password;
     }
 
@@ -170,10 +174,12 @@ public class BaseConfig<T extends BaseConfig<T>> {
      */
     public T setUsername(String username) {
         this.username = username;
+        log.warn("[CTEST][SET-PARAM] " + "Username"); //CTEST
         return (T) this;
     }
 
     public String getUsername() {
+        log.warn("[CTEST][GET-PARAM] " + "Username"); //CTEST
         return username;
     }
 
@@ -188,11 +194,13 @@ public class BaseConfig<T extends BaseConfig<T>> {
      * @return config
      */
     public T setRetryAttempts(int retryAttempts) {
+        log.warn("[CTEST][SET-PARAM] " + "RetryAttempts"); //CTEST
         this.retryAttempts = retryAttempts;
         return (T) this;
     }
 
     public int getRetryAttempts() {
+        log.warn("[CTEST][GET-PARAM] " + "RetryAttempts"); //CTEST
         return retryAttempts;
     }
 
@@ -207,10 +215,12 @@ public class BaseConfig<T extends BaseConfig<T>> {
      */
     public T setRetryInterval(int retryInterval) {
         this.retryInterval = retryInterval;
+        log.warn("[CTEST][SET-PARAM] " + "RetryInterval"); //CTEST
         return (T) this;
     }
 
     public int getRetryInterval() {
+        log.warn("[CTEST][GET-PARAM] " + "RetryInterval"); //CTEST
         return retryInterval;
     }
 
@@ -223,11 +233,13 @@ public class BaseConfig<T extends BaseConfig<T>> {
      * @return config
      */
     public T setTimeout(int timeout) {
+        log.warn("[CTEST][SET-PARAM] " + "Timeout"); //CTEST
         this.timeout = timeout;
         return (T) this;
     }
 
     public int getTimeout() {
+        log.warn("[CTEST][GET-PARAM] " + "Timeout"); //CTEST
         return timeout;
     }
 
@@ -242,10 +254,12 @@ public class BaseConfig<T extends BaseConfig<T>> {
      */
     public T setClientName(String clientName) {
         this.clientName = clientName;
+        log.warn("[CTEST][SET-PARAM] " + "ClientName"); //CTEST
         return (T) this;
     }
 
     public String getClientName() {
+        log.warn("[CTEST][GET-PARAM] " + "ClientName"); //CTEST
         return clientName;
     }
 
@@ -259,10 +273,12 @@ public class BaseConfig<T extends BaseConfig<T>> {
      */
     public T setConnectTimeout(int connectTimeout) {
         this.connectTimeout = connectTimeout;
+        log.warn("[CTEST][SET-PARAM] " + "ConnectTimeout"); //CTEST
         return (T) this;
     }
 
     public int getConnectTimeout() {
+        log.warn("[CTEST][GET-PARAM] " + "ConnectTimeout"); //CTEST
         return connectTimeout;
     }
 
@@ -278,14 +294,17 @@ public class BaseConfig<T extends BaseConfig<T>> {
      */
     public T setIdleConnectionTimeout(int idleConnectionTimeout) {
         this.idleConnectionTimeout = idleConnectionTimeout;
+        log.warn("[CTEST][SET-PARAM] " + "IdleConnectionTimeout"); //CTEST
         return (T) this;
     }
 
     public int getIdleConnectionTimeout() {
+        log.warn("[CTEST][GET-PARAM] " + "IdleConnectionTimeout"); //CTEST
         return idleConnectionTimeout;
     }
 
     public boolean isSslEnableEndpointIdentification() {
+        log.warn("[CTEST][GET-PARAM] " + "SslEnableEndpointIdentification"); //CTEST
         return sslEnableEndpointIdentification;
     }
 
@@ -299,10 +318,12 @@ public class BaseConfig<T extends BaseConfig<T>> {
      */
     public T setSslEnableEndpointIdentification(boolean sslEnableEndpointIdentification) {
         this.sslEnableEndpointIdentification = sslEnableEndpointIdentification;
+        log.warn("[CTEST][SET-PARAM] " + "SslEnableEndpointIdentification"); //CTEST
         return (T) this;
     }
 
     public SslProvider getSslProvider() {
+        log.warn("[CTEST][GET-PARAM] " + "SslProvider"); //CTEST
         return sslProvider;
     }
 
@@ -316,10 +337,12 @@ public class BaseConfig<T extends BaseConfig<T>> {
      */
     public T setSslProvider(SslProvider sslProvider) {
         this.sslProvider = sslProvider;
+        log.warn("[CTEST][SET-PARAM] " + "SslProvider"); //CTEST
         return (T) this;
     }
 
     public URL getSslTruststore() {
+        log.warn("[CTEST][GET-PARAM] " + "SslTruststore"); //CTEST
         return sslTruststore;
     }
 
@@ -333,10 +356,12 @@ public class BaseConfig<T extends BaseConfig<T>> {
      */
     public T setSslTruststore(URL sslTruststore) {
         this.sslTruststore = sslTruststore;
+        log.warn("[CTEST][SET-PARAM] " + "SslTruststore"); //CTEST
         return (T) this;
     }
 
     public String getSslTruststorePassword() {
+        log.warn("[CTEST][GET-PARAM] " + "SslTruststorePassword"); //CTEST
         return sslTruststorePassword;
     }
 
@@ -351,10 +376,12 @@ public class BaseConfig<T extends BaseConfig<T>> {
      */
     public T setSslTruststorePassword(String sslTruststorePassword) {
         this.sslTruststorePassword = sslTruststorePassword;
+        log.warn("[CTEST][SET-PARAM] " + "SslTruststorePassword"); //CTEST
         return (T) this;
     }
 
     public URL getSslKeystore() {
+        log.warn("[CTEST][GET-PARAM] " + "SslKeystore"); //CTEST
         return sslKeystore;
     }
 
@@ -369,10 +396,12 @@ public class BaseConfig<T extends BaseConfig<T>> {
      */
     public T setSslKeystore(URL sslKeystore) {
         this.sslKeystore = sslKeystore;
+        log.warn("[CTEST][SET-PARAM] " + "SslKeystore"); //CTEST
         return (T) this;
     }
 
     public String getSslKeystorePassword() {
+        log.warn("[CTEST][GET-PARAM] " + "SslKeystorePassword"); //CTEST
         return sslKeystorePassword;
     }
 
@@ -386,10 +415,12 @@ public class BaseConfig<T extends BaseConfig<T>> {
      */
     public T setSslKeystorePassword(String sslKeystorePassword) {
         this.sslKeystorePassword = sslKeystorePassword;
+        log.warn("[CTEST][SET-PARAM] " + "SslKeystorePassword"); //CTEST
         return (T) this;
     }
 
     public String[] getSslProtocols() {
+        log.warn("[CTEST][GET-PARAM] " + "SslProtocols"); //CTEST
         return sslProtocols;
     }
 
@@ -404,10 +435,12 @@ public class BaseConfig<T extends BaseConfig<T>> {
      */
     public T setSslProtocols(String[] sslProtocols) {
         this.sslProtocols = sslProtocols;
+        log.warn("[CTEST][SET-PARAM] " + "SslProtocols"); //CTEST
         return (T) this;
     }
 
     public int getPingConnectionInterval() {
+        log.warn("[CTEST][GET-PARAM] " + "PingConnectionInterval"); //CTEST
         return pingConnectionInterval;
     }
 
@@ -422,10 +455,12 @@ public class BaseConfig<T extends BaseConfig<T>> {
      */
     public T setPingConnectionInterval(int pingConnectionInterval) {
         this.pingConnectionInterval = pingConnectionInterval;
+        log.warn("[CTEST][SET-PARAM] " + "PingConnectionInterval"); //CTEST
         return (T) this;
     }
 
     public boolean isKeepAlive() {
+        log.warn("[CTEST][GET-PARAM] " + "KeepAlive"); //CTEST
         return keepAlive;
     }
 
@@ -439,10 +474,12 @@ public class BaseConfig<T extends BaseConfig<T>> {
      */
     public T setKeepAlive(boolean keepAlive) {
         this.keepAlive = keepAlive;
+        log.warn("[CTEST][SET-PARAM] " + "KeepAlive"); //CTEST
         return (T) this;
     }
 
     public boolean isTcpNoDelay() {
+        log.warn("[CTEST][GET-PARAM] " + "TcpNoDelay"); //CTEST
         return tcpNoDelay;
     }
 
@@ -456,11 +493,13 @@ public class BaseConfig<T extends BaseConfig<T>> {
      */
     public T setTcpNoDelay(boolean tcpNoDelay) {
         this.tcpNoDelay = tcpNoDelay;
+        log.warn("[CTEST][SET-PARAM] " + "TcpNoDelay"); //CTEST
         return (T) this;
     }
 
 
     public NameMapper getNameMapper() {
+        log.warn("[CTEST][GET-PARAM] " + "NameMapper"); //CTEST
         return nameMapper;
     }
 
@@ -473,6 +512,17 @@ public class BaseConfig<T extends BaseConfig<T>> {
      */
     public T setNameMapper(NameMapper nameMapper) {
         this.nameMapper = nameMapper;
+        log.warn("[CTEST][SET-PARAM] " + "NameMapper"); //CTEST
         return (T) this;
     }
+
+    private static String getStackTrace() {
+        String stacktrace = " ";
+        for (StackTraceElement element : Thread.currentThread().getStackTrace()) {
+            stacktrace = stacktrace.concat(
+                    element.getClassName() + "#" + element.getMethodName() + "#" + element.getLineNumber() + "\t"
+            );
+        }
+        return stacktrace;
+    }
 }
diff --git a/redisson/src/main/java/org/redisson/config/BaseMasterSlaveServersConfig.java b/redisson/src/main/java/org/redisson/config/BaseMasterSlaveServersConfig.java
index b14e1b7f5..b649f7861 100644
--- a/redisson/src/main/java/org/redisson/config/BaseMasterSlaveServersConfig.java
+++ b/redisson/src/main/java/org/redisson/config/BaseMasterSlaveServersConfig.java
@@ -17,6 +17,8 @@ package org.redisson.config;
 
 import org.redisson.connection.balancer.LoadBalancer;
 import org.redisson.connection.balancer.RoundRobinLoadBalancer;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
 
 /**
  * 
@@ -30,7 +32,7 @@ public class BaseMasterSlaveServersConfig<T extends BaseMasterSlaveServersConfig
      * Сonnection load balancer for multiple Redis slave servers
      */
     private LoadBalancer loadBalancer = new RoundRobinLoadBalancer();
-
+    private static final Logger log = LoggerFactory.getLogger(BaseMasterSlaveServersConfig.class);
     /**
      * Redis 'slave' node minimum idle connection amount for <b>each</b> slave node
      */
@@ -102,9 +104,11 @@ public class BaseMasterSlaveServersConfig<T extends BaseMasterSlaveServersConfig
      */
     public T setSlaveConnectionPoolSize(int slaveConnectionPoolSize) {
         this.slaveConnectionPoolSize = slaveConnectionPoolSize;
+        log.warn("[CTEST][SET-PARAM] " + "SlaveConnectionPoolSize"); //CTEST
         return (T) this;
     }
     public int getSlaveConnectionPoolSize() {
+        log.warn("[CTEST][GET-PARAM] " + "SlaveConnectionPoolSize"); //CTEST
         return slaveConnectionPoolSize;
     }
     
@@ -123,10 +127,12 @@ public class BaseMasterSlaveServersConfig<T extends BaseMasterSlaveServersConfig
 
     public T setFailedSlaveReconnectionInterval(int failedSlavesReconnectionTimeout) {
         this.failedSlaveReconnectionInterval = failedSlavesReconnectionTimeout;
+        log.warn("[CTEST][SET-PARAM] " + "FailedSlaveReconnectionInterval"); //CTEST
         return (T) this;
     }
 
     public int getFailedSlaveReconnectionInterval() {
+        log.warn("[CTEST][GET-PARAM] " + "FailedSlaveReconnectionInterval"); //CTEST
         return failedSlaveReconnectionInterval;
     }
 
@@ -143,9 +149,11 @@ public class BaseMasterSlaveServersConfig<T extends BaseMasterSlaveServersConfig
      */
     public T setFailedSlaveCheckInterval(int slaveFailsInterval) {
         this.failedSlaveCheckInterval = slaveFailsInterval;
+        log.warn("[CTEST][SET-PARAM] " + "FailedSlaveCheckInterval"); //CTEST
         return (T) this;
     }
     public int getFailedSlaveCheckInterval() {
+        log.warn("[CTEST][GET-PARAM] " + "FailedSlaveCheckInterval"); //CTEST
         return failedSlaveCheckInterval;
     }
 
@@ -162,9 +170,11 @@ public class BaseMasterSlaveServersConfig<T extends BaseMasterSlaveServersConfig
      */
     public T setMasterConnectionPoolSize(int masterConnectionPoolSize) {
         this.masterConnectionPoolSize = masterConnectionPoolSize;
+        log.warn("[CTEST][SET-PARAM] " + "MasterConnectionPoolSize"); //CTEST
         return (T) this;
     }
     public int getMasterConnectionPoolSize() {
+        log.warn("[CTEST][GET-PARAM] " + "MasterConnectionPoolSize"); //CTEST
         return masterConnectionPoolSize;
     }
 
@@ -181,9 +191,11 @@ public class BaseMasterSlaveServersConfig<T extends BaseMasterSlaveServersConfig
      */
     public T setLoadBalancer(LoadBalancer loadBalancer) {
         this.loadBalancer = loadBalancer;
+        log.warn("[CTEST][SET-PARAM] " + "LoadBalancer"); //CTEST
         return (T) this;
     }
     public LoadBalancer getLoadBalancer() {
+        log.warn("[CTEST][GET-PARAM] " + "LoadBalancer"); //CTEST
         return loadBalancer;
     }
 
@@ -199,9 +211,11 @@ public class BaseMasterSlaveServersConfig<T extends BaseMasterSlaveServersConfig
      */
     public T setSubscriptionConnectionPoolSize(int subscriptionConnectionPoolSize) {
         this.subscriptionConnectionPoolSize = subscriptionConnectionPoolSize;
+        log.warn("[CTEST][SET-PARAM] " + "SubscriptionConnectionPoolSize"); //CTEST
         return (T) this;
     }
     public int getSubscriptionConnectionPoolSize() {
+        log.warn("[CTEST][GET-PARAM] " + "SubscriptionConnectionPoolSize"); //CTEST
         return subscriptionConnectionPoolSize;
     }
 
@@ -218,9 +232,11 @@ public class BaseMasterSlaveServersConfig<T extends BaseMasterSlaveServersConfig
      */
     public T setSlaveConnectionMinimumIdleSize(int slaveConnectionMinimumIdleSize) {
         this.slaveConnectionMinimumIdleSize = slaveConnectionMinimumIdleSize;
+        log.warn("[CTEST][SET-PARAM] " + "SlaveConnectionMinimumIdleSize"); //CTEST
         return (T) this;
     }
     public int getSlaveConnectionMinimumIdleSize() {
+        log.warn("[CTEST][GET-PARAM] " + "SlaveConnectionMinimumIdleSize"); //CTEST
         return slaveConnectionMinimumIdleSize;
     }
 
@@ -236,9 +252,11 @@ public class BaseMasterSlaveServersConfig<T extends BaseMasterSlaveServersConfig
      */
     public T setMasterConnectionMinimumIdleSize(int masterConnectionMinimumIdleSize) {
         this.masterConnectionMinimumIdleSize = masterConnectionMinimumIdleSize;
+        log.warn("[CTEST][SET-PARAM] " + "MasterConnectionMinimumIdleSize"); //CTEST
         return (T) this;
     }
     public int getMasterConnectionMinimumIdleSize() {
+        log.warn("[CTEST][GET-PARAM] " + "MasterConnectionMinimumIdleSize"); //CTEST
         return masterConnectionMinimumIdleSize;
     }
 
@@ -254,9 +272,11 @@ public class BaseMasterSlaveServersConfig<T extends BaseMasterSlaveServersConfig
      */
     public T setSubscriptionConnectionMinimumIdleSize(int subscriptionConnectionMinimumIdleSize) {
         this.subscriptionConnectionMinimumIdleSize = subscriptionConnectionMinimumIdleSize;
+        log.warn("[CTEST][SET-PARAM] " + "SubscriptionConnectionMinimumIdleSize"); //CTEST
         return (T) this;
     }
     public int getSubscriptionConnectionMinimumIdleSize() {
+        log.warn("[CTEST][GET-PARAM] " + "SubscriptionConnectionMinimumIdleSize"); //CTEST
         return subscriptionConnectionMinimumIdleSize;
     }
 
@@ -271,9 +291,11 @@ public class BaseMasterSlaveServersConfig<T extends BaseMasterSlaveServersConfig
      */
     public T setReadMode(ReadMode readMode) {
         this.readMode = readMode;
+        log.warn("[CTEST][SET-PARAM] " + "ReadMode"); //CTEST
         return (T) this;
     }
     public ReadMode getReadMode() {
+        log.warn("[CTEST][GET-PARAM] " + "ReadMode"); //CTEST
         return readMode;
     }
     
@@ -291,9 +313,11 @@ public class BaseMasterSlaveServersConfig<T extends BaseMasterSlaveServersConfig
      */
     public T setSubscriptionMode(SubscriptionMode subscriptionMode) {
         this.subscriptionMode = subscriptionMode;
+        log.warn("[CTEST][SET-PARAM] " + "SubscriptionMode"); //CTEST
         return (T) this;
     }
     public SubscriptionMode getSubscriptionMode() {
+        log.warn("[CTEST][GET-PARAM] " + "SubscriptionMode"); //CTEST
         return subscriptionMode;
     }
 
@@ -309,9 +333,11 @@ public class BaseMasterSlaveServersConfig<T extends BaseMasterSlaveServersConfig
      */
     public T setDnsMonitoringInterval(long dnsMonitoringInterval) {
         this.dnsMonitoringInterval = dnsMonitoringInterval;
+        log.warn("[CTEST][SET-PARAM] " + "DnsMonitoringInterval"); //CTEST
         return (T) this;
     }
     public long getDnsMonitoringInterval() {
+        log.warn("[CTEST][GET-PARAM] " + "DnsMonitoringInterval"); //CTEST
         return dnsMonitoringInterval;
     }
     
diff --git a/redisson/src/main/java/org/redisson/config/ClusterServersConfig.java b/redisson/src/main/java/org/redisson/config/ClusterServersConfig.java
index 9009ebc18..20052cad8 100644
--- a/redisson/src/main/java/org/redisson/config/ClusterServersConfig.java
+++ b/redisson/src/main/java/org/redisson/config/ClusterServersConfig.java
@@ -18,6 +18,8 @@ package org.redisson.config;
 import org.redisson.api.HostNatMapper;
 import org.redisson.api.HostPortNatMapper;
 import org.redisson.api.NatMapper;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
 
 import java.util.ArrayList;
 import java.util.Arrays;
@@ -32,7 +34,7 @@ import java.util.Map;
 public class ClusterServersConfig extends BaseMasterSlaveServersConfig<ClusterServersConfig> {
 
     private NatMapper natMapper = NatMapper.direct();
-    
+    private static final Logger log = LoggerFactory.getLogger(ClusterServersConfig.class);
     /**
      * Redis cluster node urls list
      */
@@ -67,13 +69,16 @@ public class ClusterServersConfig extends BaseMasterSlaveServersConfig<ClusterSe
         return this;
     }
     public List<String> getNodeAddresses() {
+        log.warn("[CTEST][GET-PARAM] " + "NodeAddress"); //CTEST
         return nodeAddresses;
     }
     public void setNodeAddresses(List<String> nodeAddresses) {
+        log.warn("[CTEST][SET-PARAM] " + "NodeAddress"); //CTEST
         this.nodeAddresses = nodeAddresses;
     }
 
     public int getScanInterval() {
+        log.warn("[CTEST][GET-PARAM] " + "ScanInterval"); //CTEST
         return scanInterval;
     }
     /**
@@ -86,10 +91,12 @@ public class ClusterServersConfig extends BaseMasterSlaveServersConfig<ClusterSe
      */
     public ClusterServersConfig setScanInterval(int scanInterval) {
         this.scanInterval = scanInterval;
+        log.warn("[CTEST][SET-PARAM] " + "ScanInterval"); //CTEST
         return this;
     }
 
     public boolean isCheckSlotsCoverage() {
+        log.warn("[CTEST][GET-PARAM] " + "CheckSlotsCoverage"); //CTEST
         return checkSlotsCoverage;
     }
 
@@ -103,6 +110,7 @@ public class ClusterServersConfig extends BaseMasterSlaveServersConfig<ClusterSe
      */
     public ClusterServersConfig setCheckSlotsCoverage(boolean checkSlotsCoverage) {
         this.checkSlotsCoverage = checkSlotsCoverage;
+        log.warn("[CTEST][SET-PARAM] " + "CheckSlotsCoverage"); //CTEST
         return this;
     }
 
@@ -118,6 +126,7 @@ public class ClusterServersConfig extends BaseMasterSlaveServersConfig<ClusterSe
     }
 
     public NatMapper getNatMapper() {
+        log.warn("[CTEST][GET-PARAM] " + "NatMapper"); //CTEST
         return natMapper;
     }
 
@@ -133,6 +142,7 @@ public class ClusterServersConfig extends BaseMasterSlaveServersConfig<ClusterSe
      */
     public ClusterServersConfig setNatMapper(NatMapper natMapper) {
         this.natMapper = natMapper;
+        log.warn("[CTEST][SET-PARAM] " + "NatMapper"); //CTEST
         return this;
     }
     
diff --git a/redisson/src/main/java/org/redisson/config/Config.java b/redisson/src/main/java/org/redisson/config/Config.java
index 957bc6d67..891707faa 100644
--- a/redisson/src/main/java/org/redisson/config/Config.java
+++ b/redisson/src/main/java/org/redisson/config/Config.java
@@ -144,6 +144,7 @@ public class Config {
     }
 
     public NettyHook getNettyHook() {
+        log.warn("[CTEST][GET-PARAM] " + "NettyHook"); //CTEST
         return nettyHook;
     }
 
@@ -155,6 +156,7 @@ public class Config {
      */
     public Config setNettyHook(NettyHook nettyHook) {
         this.nettyHook = nettyHook;
+        log.warn("[CTEST][SET-PARAM] " + "NettyHook"); //CTEST
         return this;
     }
 
@@ -169,10 +171,12 @@ public class Config {
      */
     public Config setCodec(Codec codec) {
         this.codec = codec;
+        log.warn("[CTEST][SET-PARAM] " + "Codec"); //CTEST
         return this;
     }
 
     public Codec getCodec() {
+        log.warn("[CTEST][GET-PARAM] " + "Codec"); //CTEST
         return codec;
     }
 
@@ -184,6 +188,7 @@ public class Config {
      * @return <code>true</code> if Redisson Reference feature enabled
      */
     public boolean isReferenceEnabled() {
+        log.warn("[CTEST][GET-PARAM] " + "ReferenceEnabled"); //CTEST
         return referenceEnabled;
     }
 
@@ -196,6 +201,7 @@ public class Config {
      */
     public void setReferenceEnabled(boolean redissonReferenceEnabled) {
         this.referenceEnabled = redissonReferenceEnabled;
+        log.warn("[CTEST][SET-PARAM] " + "ReferenceEnabled"); //CTEST
     }
 
     /**
@@ -220,10 +226,12 @@ public class Config {
     }
 
     protected ClusterServersConfig getClusterServersConfig() {
+        log.warn("[CTEST][GET-PARAM] " + "ClusterServersConfig"); //CTEST
         return clusterServersConfig;
     }
 
     protected void setClusterServersConfig(ClusterServersConfig clusterServersConfig) {
+        log.warn("[CTEST][SET-PARAM] " + "ClusterServersConfig"); //CTEST
         this.clusterServersConfig = clusterServersConfig;
     }
 
@@ -250,10 +258,12 @@ public class Config {
     }
 
     protected ReplicatedServersConfig getReplicatedServersConfig() {
+        log.warn("[CTEST][GET-PARAM] " + "ReplicatedServersConfig"); //CTEST
         return replicatedServersConfig;
     }
 
     protected void setReplicatedServersConfig(ReplicatedServersConfig replicatedServersConfig) {
+        log.warn("[CTEST][SET-PARAM] " + "ReplicatedServersConfig"); //CTEST
         this.replicatedServersConfig = replicatedServersConfig;
     }
 
@@ -264,6 +274,7 @@ public class Config {
      * @return ConnectionManager
      */
     ConnectionManager getConnectionManager() {
+        log.warn("[CTEST][GET-PARAM] " + "ConnectionManager"); //CTEST
         return connectionManager;
     }
 
@@ -275,6 +286,7 @@ public class Config {
      * @param connectionManager for supply
      */
     public void useCustomServers(ConnectionManager connectionManager) {
+        log.warn("[CTEST][SET-PARAM] " + "ConnectionManager"); //CTEST
         this.connectionManager = connectionManager;
     }
 
@@ -300,10 +312,12 @@ public class Config {
     }
 
     protected SingleServerConfig getSingleServerConfig() {
+        log.warn("[CTEST][GET-PARAM] " + "SingleServerConfig"); //CTEST
         return singleServerConfig;
     }
 
     protected void setSingleServerConfig(SingleServerConfig singleConnectionConfig) {
+        log.warn("[CTEST][SET-PARAM] " + "SingleServerConfig"); //CTEST
         this.singleServerConfig = singleConnectionConfig;
     }
 
@@ -329,11 +343,13 @@ public class Config {
     }
 
     protected SentinelServersConfig getSentinelServersConfig() {
+        log.warn("[CTEST][GET-PARAM] " + "SentinelServersConfig"); //CTEST
         return sentinelServersConfig;
     }
 
     protected void setSentinelServersConfig(SentinelServersConfig sentinelConnectionConfig) {
         this.sentinelServersConfig = sentinelConnectionConfig;
+        log.warn("[CTEST][SET-PARAM] " + "SentinelServersConfig"); //CTEST
     }
 
     /**
@@ -358,10 +374,12 @@ public class Config {
     }
 
     protected MasterSlaveServersConfig getMasterSlaveServersConfig() {
+        log.warn("[CTEST][GET-PARAM] " + "MasterSlaveServersConfig"); //CTEST
         return masterSlaveServersConfig;
     }
 
     protected void setMasterSlaveServersConfig(MasterSlaveServersConfig masterSlaveConnectionConfig) {
+        log.warn("[CTEST][SET-PARAM] " + "MasterSlaveServersConfig"); //CTEST
         this.masterSlaveServersConfig = masterSlaveConnectionConfig;
     }
 
@@ -374,6 +392,7 @@ public class Config {
     }
 
     public int getThreads() {
+        log.warn("[CTEST][GET-PARAM] " + "Threads"); //CTEST
         return threads;
     }
 
@@ -391,6 +410,7 @@ public class Config {
      */
     public Config setThreads(int threads) {
         this.threads = threads;
+        log.warn("[CTEST][SET-PARAM] " + "Threads"); //CTEST
         return this;
     }
 
@@ -434,10 +454,12 @@ public class Config {
      */
     public Config setTransportMode(TransportMode transportMode) {
         this.transportMode = transportMode;
+        log.warn("[CTEST][SET-PARAM] " + "TransportMode"); //CTEST
         return this;
     }
 
     public TransportMode getTransportMode() {
+        log.warn("[CTEST][GET-PARAM] " + "TransportMode"); //CTEST
         return transportMode;
     }
 
@@ -453,10 +475,12 @@ public class Config {
      */
     public Config setNettyThreads(int nettyThreads) {
         this.nettyThreads = nettyThreads;
+        log.warn("[CTEST][SET-PARAM] " + "NettyThreads"); //CTEST
         return this;
     }
 
     public int getNettyThreads() {
+        log.warn("[CTEST][GET-PARAM] " + "NettyThreads"); //CTEST
         return nettyThreads;
     }
 
@@ -473,10 +497,12 @@ public class Config {
      */
     public Config setExecutor(ExecutorService executor) {
         this.executor = executor;
+        log.warn("[CTEST][SET-PARAM] " + "Executor"); //CTEST
         return this;
     }
 
     public ExecutorService getExecutor() {
+        log.warn("[CTEST][GET-PARAM] " + "Executor"); //CTEST
         return executor;
     }
 
@@ -498,10 +524,12 @@ public class Config {
      */
     public Config setEventLoopGroup(EventLoopGroup eventLoopGroup) {
         this.eventLoopGroup = eventLoopGroup;
+        log.warn("[CTEST][SET-PARAM] " + "EventLoopGroup"); //CTEST
         return this;
     }
 
     public EventLoopGroup getEventLoopGroup() {
+        log.warn("[CTEST][GET-PARAM] " + "EventLoopGroup"); //CTEST
         return eventLoopGroup;
     }
 
@@ -520,10 +548,12 @@ public class Config {
      */
     public Config setLockWatchdogTimeout(long lockWatchdogTimeout) {
         this.lockWatchdogTimeout = lockWatchdogTimeout;
+        log.warn("[CTEST][SET-PARAM] " + "LockWatchdogTimeout"); //CTEST
         return this;
     }
 
     public long getLockWatchdogTimeout() {
+        log.warn("[CTEST][GET-PARAM] " + "LockWatchdogTimeout"); //CTEST
         return lockWatchdogTimeout;
     }
 
@@ -539,10 +569,12 @@ public class Config {
      */
     public Config setCheckLockSyncedSlaves(boolean checkLockSyncedSlaves) {
         this.checkLockSyncedSlaves = checkLockSyncedSlaves;
+        log.warn("[CTEST][SET-PARAM] " + "CheckLockSyncedSlaves"); //CTEST
         return this;
     }
 
     public boolean isCheckLockSyncedSlaves() {
+        log.warn("[CTEST][GET-PARAM] " + "CheckLockSyncedSlaves"); //CTEST
         return checkLockSyncedSlaves;
     }
 
@@ -559,10 +591,12 @@ public class Config {
      */
     public Config setKeepPubSubOrder(boolean keepPubSubOrder) {
         this.keepPubSubOrder = keepPubSubOrder;
+        log.warn("[CTEST][SET-PARAM] " + "KeepPubSubOrder"); //CTEST
         return this;
     }
 
     public boolean isKeepPubSubOrder() {
+        log.warn("[CTEST][GET-PARAM] " + "KeepPubSubOrder"); //CTEST
         return keepPubSubOrder;
     }
 
@@ -575,10 +609,12 @@ public class Config {
      */
     public Config setAddressResolverGroupFactory(AddressResolverGroupFactory addressResolverGroupFactory) {
         this.addressResolverGroupFactory = addressResolverGroupFactory;
+        log.warn("[CTEST][SET-PARAM] " + "AddressResolverGroupFactory"); //CTEST
         return this;
     }
 
     public AddressResolverGroupFactory getAddressResolverGroupFactory() {
+        log.warn("[CTEST][GET-PARAM] " + "AddressResolverGroupFactory"); //CTEST
         return addressResolverGroupFactory;
     }
 
@@ -717,14 +753,17 @@ public class Config {
      */
     public Config setUseScriptCache(boolean useScriptCache) {
         this.useScriptCache = useScriptCache;
+        log.warn("[CTEST][SET-PARAM] " + "UseScriptCache"); //CTEST
         return this;
     }
 
     public boolean isUseScriptCache() {
+        log.warn("[CTEST][GET-PARAM] " + "UseScriptCache"); //CTEST
         return useScriptCache;
     }
 
     public int getMinCleanUpDelay() {
+        log.warn("[CTEST][GET-PARAM] " + "MinCleanUpDelay"); //CTEST
         return minCleanUpDelay;
     }
     
@@ -740,10 +779,12 @@ public class Config {
      */
     public Config setMinCleanUpDelay(int minCleanUpDelay) {
         this.minCleanUpDelay = minCleanUpDelay;
+        log.warn("[CTEST][SET-PARAM] " + "MinCleanUpDelay"); //CTEST
         return this;
     }
 
     public int getMaxCleanUpDelay() {
+        log.warn("[CTEST][GET-PARAM] " + "MaxCleanUpDelay"); //CTEST
         return maxCleanUpDelay;
     }
     
@@ -759,10 +800,12 @@ public class Config {
      */
     public Config setMaxCleanUpDelay(int maxCleanUpDelay) {
         this.maxCleanUpDelay = maxCleanUpDelay;
+        log.warn("[CTEST][SET-PARAM] " + "MaxCleanUpDelay"); //CTEST
         return this;
     }
 
     public int getCleanUpKeysAmount() {
+        log.warn("[CTEST][GET-PARAM] " + "getCleanUpKeysAmount"); //CTEST
         return cleanUpKeysAmount;
     }
 
@@ -778,10 +821,12 @@ public class Config {
      */
     public Config setCleanUpKeysAmount(int cleanUpKeysAmount) {
         this.cleanUpKeysAmount = cleanUpKeysAmount;
+        log.warn("[CTEST][SET-PARAM] " + "getCleanUpKeysAmount"); //CTEST
         return this;
     }
 
     public boolean isUseThreadClassLoader() {
+        log.warn("[CTEST][GET-PARAM] " + "UseThreadClassLoader"); //CTEST
         return useThreadClassLoader;
     }
 
@@ -797,10 +842,12 @@ public class Config {
      */
     public Config setUseThreadClassLoader(boolean useThreadClassLoader) {
         this.useThreadClassLoader = useThreadClassLoader;
+        log.warn("[CTEST][SET-PARAM] " + "UseThreadClassLoader"); //CTEST
         return this;
     }
 
     public long getReliableTopicWatchdogTimeout() {
+        log.warn("[CTEST][GET-PARAM] " + "ReliableTopicWatchdogTimeout"); //CTEST
         return reliableTopicWatchdogTimeout;
     }
 
@@ -818,10 +865,12 @@ public class Config {
      */
     public Config setReliableTopicWatchdogTimeout(long timeout) {
         this.reliableTopicWatchdogTimeout = timeout;
+        log.warn("[CTEST][SET-PARAM] " + "ReliableTopicWatchdogTimeout"); //CTEST
         return this;
     }
 
     public ConnectionListener getConnectionListener() {
+        log.warn("[CTEST][GET-PARAM] " + "ConnectionListener"); //CTEST
         return connectionListener;
     }
 
@@ -834,6 +883,7 @@ public class Config {
      */
     public Config setConnectionListener(ConnectionListener connectionListener) {
         this.connectionListener = connectionListener;
+        log.warn("[CTEST][SET-PARAM] " + "ConnectionListener"); //CTEST
         return this;
     }
 }
diff --git a/redisson/src/main/java/org/redisson/config/MasterSlaveServersConfig.java b/redisson/src/main/java/org/redisson/config/MasterSlaveServersConfig.java
index 99915f5fe..d10d2e0dd 100644
--- a/redisson/src/main/java/org/redisson/config/MasterSlaveServersConfig.java
+++ b/redisson/src/main/java/org/redisson/config/MasterSlaveServersConfig.java
@@ -14,6 +14,8 @@
  * limitations under the License.
  */
 package org.redisson.config;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
 
 import java.util.Arrays;
 import java.util.HashSet;
@@ -30,7 +32,7 @@ public class MasterSlaveServersConfig extends BaseMasterSlaveServersConfig<Maste
      * Redis slave servers addresses
      */
     private Set<String> slaveAddresses = new HashSet<String>();
-
+    private static final Logger log = LoggerFactory.getLogger(MasterSlaveServersConfig.class);
     /**
      * Redis master server address
      */
@@ -60,9 +62,11 @@ public class MasterSlaveServersConfig extends BaseMasterSlaveServersConfig<Maste
      */
     public MasterSlaveServersConfig setMasterAddress(String masterAddress) {
         this.masterAddress = masterAddress;
+        log.warn("[CTEST][SET-PARAM] " + "MasterAddress"); //CTEST
         return this;
     }
     public String getMasterAddress() {
+        log.warn("[CTEST][GET-PARAM] " + "MasterAddress"); //CTEST
         return masterAddress;
     }
 
@@ -81,9 +85,11 @@ public class MasterSlaveServersConfig extends BaseMasterSlaveServersConfig<Maste
         return this;
     }
     public Set<String> getSlaveAddresses() {
+        log.warn("[CTEST][GET-PARAM] " + "SlaveAddresses"); //CTEST
         return slaveAddresses;
     }
     public void setSlaveAddresses(Set<String> readAddresses) {
+        log.warn("[CTEST][SET-PARAM] " + "SlaveAddresses"); //CTEST
         this.slaveAddresses = readAddresses;
     }
 
@@ -96,9 +102,11 @@ public class MasterSlaveServersConfig extends BaseMasterSlaveServersConfig<Maste
      */
     public MasterSlaveServersConfig setDatabase(int database) {
         this.database = database;
+        log.warn("[CTEST][SET-PARAM] " + "Database"); //CTEST
         return this;
     }
     public int getDatabase() {
+        log.warn("[CTEST][GET-PARAM] " + "Database"); //CTEST
         return database;
     }
 
diff --git a/redisson/src/main/java/org/redisson/config/RedissonNodeFileConfig.java b/redisson/src/main/java/org/redisson/config/RedissonNodeFileConfig.java
index bbe665391..d0d42859d 100644
--- a/redisson/src/main/java/org/redisson/config/RedissonNodeFileConfig.java
+++ b/redisson/src/main/java/org/redisson/config/RedissonNodeFileConfig.java
@@ -16,6 +16,8 @@
 package org.redisson.config;
 
 import org.redisson.api.RedissonNodeInitializer;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
 
 import java.io.File;
 import java.io.IOException;
@@ -33,7 +35,7 @@ public class RedissonNodeFileConfig extends Config {
     private int mapReduceWorkers = 0;
     private RedissonNodeInitializer redissonNodeInitializer;
     private Map<String, Integer> executorServiceWorkers = new HashMap<>();
-
+    private static final Logger log = LoggerFactory.getLogger(RedissonNodeFileConfig.class);
     public RedissonNodeFileConfig() {
         super();
     }
@@ -64,9 +66,11 @@ public class RedissonNodeFileConfig extends Config {
      */
     public RedissonNodeFileConfig setMapReduceWorkers(int mapReduceWorkers) {
         this.mapReduceWorkers = mapReduceWorkers;
+        log.warn("[CTEST][SET-PARAM] " + "MapReduceWorkers"); //CTEST
         return this;
     }
     public int getMapReduceWorkers() {
+        log.warn("[CTEST][GET-PARAM] " + "MapReduceWorkers"); //CTEST
         return mapReduceWorkers;
     }
     
@@ -78,9 +82,11 @@ public class RedissonNodeFileConfig extends Config {
      */
     public RedissonNodeFileConfig setExecutorServiceWorkers(Map<String, Integer> workers) {
         this.executorServiceWorkers = workers;
+        log.warn("[CTEST][SET-PARAM] " + "ExecutorServiceWorkers"); //CTEST
         return this;
     }
     public Map<String, Integer> getExecutorServiceWorkers() {
+        log.warn("[CTEST][GET-PARAM] " + "ExecutorServiceWorkers"); //CTEST
         return executorServiceWorkers;
     }
     
@@ -92,9 +98,11 @@ public class RedissonNodeFileConfig extends Config {
      */
     public RedissonNodeFileConfig setRedissonNodeInitializer(RedissonNodeInitializer redissonNodeInitializer) {
         this.redissonNodeInitializer = redissonNodeInitializer;
+        log.warn("[CTEST][SET-PARAM] " + "RedissonNodeInitializer"); //CTEST
         return this;
     }
     public RedissonNodeInitializer getRedissonNodeInitializer() {
+        log.warn("[CTEST][GET-PARAM] " + "RedissonNodeInitializer"); //CTEST
         return redissonNodeInitializer;
     }
 
diff --git a/redisson/src/main/java/org/redisson/config/ReplicatedServersConfig.java b/redisson/src/main/java/org/redisson/config/ReplicatedServersConfig.java
index 83c7d03cc..889dd1d0f 100644
--- a/redisson/src/main/java/org/redisson/config/ReplicatedServersConfig.java
+++ b/redisson/src/main/java/org/redisson/config/ReplicatedServersConfig.java
@@ -14,6 +14,8 @@
  * limitations under the License.
  */
 package org.redisson.config;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
 
 import java.util.ArrayList;
 import java.util.Arrays;
@@ -28,6 +30,7 @@ import java.util.List;
  */
 public class ReplicatedServersConfig extends BaseMasterSlaveServersConfig<ReplicatedServersConfig> {
 
+    private static final Logger log = LoggerFactory.getLogger(ReplicatedServersConfig.class);
     /**
      * Replication group node urls list
      */
@@ -64,13 +67,16 @@ public class ReplicatedServersConfig extends BaseMasterSlaveServersConfig<Replic
         return this;
     }
     public List<String> getNodeAddresses() {
+        log.warn("[CTEST][GET-PARAM] " + "NodeAddresses"); //CTEST
         return nodeAddresses;
     }
     public void setNodeAddresses(List<String> nodeAddresses) {
+        log.warn("[CTEST][SET-PARAM] " + "NodeAddresses"); //CTEST
         this.nodeAddresses = nodeAddresses;
     }
 
     public int getScanInterval() {
+        log.warn("[CTEST][GET-PARAM] " + "ScanInterval"); //CTEST
         return scanInterval;
     }
     /**
@@ -83,6 +89,7 @@ public class ReplicatedServersConfig extends BaseMasterSlaveServersConfig<Replic
      */
     public ReplicatedServersConfig setScanInterval(int scanInterval) {
         this.scanInterval = scanInterval;
+        log.warn("[CTEST][SET-PARAM] " + "ScanInterval"); //CTEST
         return this;
     }
 
@@ -96,9 +103,11 @@ public class ReplicatedServersConfig extends BaseMasterSlaveServersConfig<Replic
      */
     public ReplicatedServersConfig setDatabase(int database) {
         this.database = database;
+        log.warn("[CTEST][SET-PARAM] " + "Database"); //CTEST
         return this;
     }
     public int getDatabase() {
+        log.warn("[CTEST][GET-PARAM] " + "Database"); //CTEST
         return database;
     }
 
diff --git a/redisson/src/main/java/org/redisson/config/SentinelServersConfig.java b/redisson/src/main/java/org/redisson/config/SentinelServersConfig.java
index af48ab03a..1c3fc6f01 100644
--- a/redisson/src/main/java/org/redisson/config/SentinelServersConfig.java
+++ b/redisson/src/main/java/org/redisson/config/SentinelServersConfig.java
@@ -18,6 +18,8 @@ package org.redisson.config;
 import org.redisson.api.HostNatMapper;
 import org.redisson.api.HostPortNatMapper;
 import org.redisson.api.NatMapper;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
 
 import java.util.ArrayList;
 import java.util.Arrays;
@@ -31,6 +33,7 @@ import java.util.Map;
  */
 public class SentinelServersConfig extends BaseMasterSlaveServersConfig<SentinelServersConfig> {
 
+    private static final Logger log = LoggerFactory.getLogger(SentinelServersConfig.class);
     private List<String> sentinelAddresses = new ArrayList<>();
     
     private NatMapper natMapper = NatMapper.direct();
@@ -82,9 +85,11 @@ public class SentinelServersConfig extends BaseMasterSlaveServersConfig<Sentinel
      */
     public SentinelServersConfig setMasterName(String masterName) {
         this.masterName = masterName;
+        log.warn("[CTEST][SET-PARAM] " + "MasterName"); //CTEST
         return this;
     }
     public String getMasterName() {
+        log.warn("[CTEST][GET-PARAM] " + "MasterName"); //CTEST
         return masterName;
     }
 
@@ -96,10 +101,12 @@ public class SentinelServersConfig extends BaseMasterSlaveServersConfig<Sentinel
      */
     public SentinelServersConfig setSentinelUsername(String sentinelUsername) {
         this.sentinelUsername = sentinelUsername;
+        log.warn("[CTEST][SET-PARAM] " + "SentinelUsername"); //CTEST
         return this;
     }
 
     public String getSentinelUsername() {
+        log.warn("[CTEST][GET-PARAM] " + "SentinelUsername"); //CTEST
         return sentinelUsername;
     }
 
@@ -112,9 +119,11 @@ public class SentinelServersConfig extends BaseMasterSlaveServersConfig<Sentinel
      */
     public SentinelServersConfig setSentinelPassword(String sentinelPassword) {
         this.sentinelPassword = sentinelPassword;
+        log.warn("[CTEST][SET-PARAM] " + "SentinelPassword"); //CTEST
         return this;
     }
     public String getSentinelPassword() {
+        log.warn("[CTEST][GET-PARAM] " + "SentinelPassword"); //CTEST
         return sentinelPassword;
     }
 
@@ -130,10 +139,12 @@ public class SentinelServersConfig extends BaseMasterSlaveServersConfig<Sentinel
         return this;
     }
     public List<String> getSentinelAddresses() {
+        log.warn("[CTEST][GET-PARAM] " + "SentinelAddresses"); //CTEST
         return sentinelAddresses;
     }
     public void setSentinelAddresses(List<String> sentinelAddresses) {
         this.sentinelAddresses = sentinelAddresses;
+        log.warn("[CTEST][SET-PARAM] " + "SentinelAddresses"); //CTEST
     }
 
     /**
@@ -145,13 +156,16 @@ public class SentinelServersConfig extends BaseMasterSlaveServersConfig<Sentinel
      */
     public SentinelServersConfig setDatabase(int database) {
         this.database = database;
+        log.warn("[CTEST][SET-PARAM] " + "Database"); //CTEST
         return this;
     }
     public int getDatabase() {
+        log.warn("[CTEST][GET-PARAM] " + "Database"); //CTEST
         return database;
     }
 
     public int getScanInterval() {
+        log.warn("[CTEST][GET-PARAM] " + "ScanInterval"); //CTEST
         return scanInterval;
     }
     /**
@@ -164,6 +178,7 @@ public class SentinelServersConfig extends BaseMasterSlaveServersConfig<Sentinel
      */
     public SentinelServersConfig setScanInterval(int scanInterval) {
         this.scanInterval = scanInterval;
+        log.warn("[CTEST][SET-PARAM] " + "ScanInterval"); //CTEST
         return this;
     }
 
@@ -179,6 +194,7 @@ public class SentinelServersConfig extends BaseMasterSlaveServersConfig<Sentinel
     }
 
     public NatMapper getNatMapper() {
+        log.warn("[CTEST][GET-PARAM] " + "NatMapper"); //CTEST
         return natMapper;
     }
 
@@ -194,10 +210,12 @@ public class SentinelServersConfig extends BaseMasterSlaveServersConfig<Sentinel
      */
     public SentinelServersConfig setNatMapper(NatMapper natMapper) {
         this.natMapper = natMapper;
+        log.warn("[CTEST][SET-PARAM] " + "NatMapper"); //CTEST
         return this;
     }
 
     public boolean isCheckSentinelsList() {
+        log.warn("[CTEST][GET-PARAM] " + "CheckSentinelsList"); //CTEST
         return checkSentinelsList;
     }
 
@@ -211,10 +229,12 @@ public class SentinelServersConfig extends BaseMasterSlaveServersConfig<Sentinel
      */
     public SentinelServersConfig setCheckSentinelsList(boolean checkSentinelsList) {
         this.checkSentinelsList = checkSentinelsList;
+        log.warn("[CTEST][SET-PARAM] " + "CheckSentinelsList"); //CTEST
         return this;
     }
 
     public boolean isCheckSlaveStatusWithSyncing() {
+        log.warn("[CTEST][GET-PARAM] " + "CheckSlaveStatusWithSyncing"); //CTEST
         return checkSlaveStatusWithSyncing;
     }
 
@@ -228,10 +248,12 @@ public class SentinelServersConfig extends BaseMasterSlaveServersConfig<Sentinel
      */
     public SentinelServersConfig setCheckSlaveStatusWithSyncing(boolean checkSlaveStatusWithSyncing) {
         this.checkSlaveStatusWithSyncing = checkSlaveStatusWithSyncing;
+        log.warn("[CTEST][SET-PARAM] " + "CheckSlaveStatusWithSyncing"); //CTEST
         return this;
     }
 
     public boolean isSentinelsDiscovery() {
+        log.warn("[CTEST][GET-PARAM] " + "SentinelsDiscovery"); //CTEST
         return sentinelsDiscovery;
     }
 
@@ -245,6 +267,7 @@ public class SentinelServersConfig extends BaseMasterSlaveServersConfig<Sentinel
      */
     public SentinelServersConfig setSentinelsDiscovery(boolean sentinelsDiscovery) {
         this.sentinelsDiscovery = sentinelsDiscovery;
+        log.warn("[CTEST][SET-PARAM] " + "SentinelsDiscovery"); //CTEST
         return this;
     }
 }
diff --git a/redisson/src/main/java/org/redisson/config/SingleServerConfig.java b/redisson/src/main/java/org/redisson/config/SingleServerConfig.java
index 54279749d..e77470c52 100644
--- a/redisson/src/main/java/org/redisson/config/SingleServerConfig.java
+++ b/redisson/src/main/java/org/redisson/config/SingleServerConfig.java
@@ -14,7 +14,8 @@
  * limitations under the License.
  */
 package org.redisson.config;
-
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
 /**
  * 
  * @author Nikita Koksharov
@@ -22,6 +23,7 @@ package org.redisson.config;
  */
 public class SingleServerConfig extends BaseConfig<SingleServerConfig> {
 
+    private static final Logger log = LoggerFactory.getLogger(SingleServerConfig.class);
     /**
      * Redis server address
      *
@@ -83,9 +85,11 @@ public class SingleServerConfig extends BaseConfig<SingleServerConfig> {
      */
     public SingleServerConfig setConnectionPoolSize(int connectionPoolSize) {
         this.connectionPoolSize = connectionPoolSize;
+        log.warn("[CTEST][SET-PARAM] " + "ConnectionPoolSize"); //CTEST
         return this;
     }
     public int getConnectionPoolSize() {
+        log.warn("[CTEST][GET-PARAM] " + "ConnectionPoolSize"); //CTEST
         return connectionPoolSize;
     }
 
@@ -99,9 +103,11 @@ public class SingleServerConfig extends BaseConfig<SingleServerConfig> {
      */
     public SingleServerConfig setSubscriptionConnectionPoolSize(int subscriptionConnectionPoolSize) {
         this.subscriptionConnectionPoolSize = subscriptionConnectionPoolSize;
+        log.warn("[CTEST][SET-PARAM] " + "setSubscriptionConnectionPoolSize"); //CTEST
         return this;
     }
     public int getSubscriptionConnectionPoolSize() {
+        log.warn("[CTEST][GET-PARAM] " + "setSubscriptionConnectionPoolSize"); //CTEST
         return subscriptionConnectionPoolSize;
     }
 
@@ -114,10 +120,12 @@ public class SingleServerConfig extends BaseConfig<SingleServerConfig> {
     public SingleServerConfig setAddress(String address) {
         if (address != null) {
             this.address = address;
+            log.warn("[CTEST][SET-PARAM] " + "Address" + getStackTrace()); //CTEST
         }
         return this;
     }
     public String getAddress() {
+        log.warn("[CTEST][GET-PARAM] " + "Address"); //CTEST
         return address;
     }
 
@@ -133,9 +141,11 @@ public class SingleServerConfig extends BaseConfig<SingleServerConfig> {
      */
     public SingleServerConfig setDnsMonitoringInterval(long dnsMonitoringInterval) {
         this.dnsMonitoringInterval = dnsMonitoringInterval;
+        log.warn("[CTEST][SET-PARAM] " + "DnsMonitoringInterval"); //CTEST
         return this;
     }
     public long getDnsMonitoringInterval() {
+        log.warn("[CTEST][GET-PARAM] " + "seDnsMonitoringInterval"); //CTEST
         return dnsMonitoringInterval;
     }
 
@@ -150,9 +160,11 @@ public class SingleServerConfig extends BaseConfig<SingleServerConfig> {
      */
     public SingleServerConfig setSubscriptionConnectionMinimumIdleSize(int subscriptionConnectionMinimumIdleSize) {
         this.subscriptionConnectionMinimumIdleSize = subscriptionConnectionMinimumIdleSize;
+        log.warn("[CTEST][SET-PARAM] " + "SubscriptionConnectionMinimumIdleSize"); //CTEST
         return this;
     }
     public int getSubscriptionConnectionMinimumIdleSize() {
+        log.warn("[CTEST][GET-PARAM] " + "SubscriptionConnectionMinimumIdleSize"); //CTEST
         return subscriptionConnectionMinimumIdleSize;
     }
 
@@ -166,9 +178,11 @@ public class SingleServerConfig extends BaseConfig<SingleServerConfig> {
      */
     public SingleServerConfig setConnectionMinimumIdleSize(int connectionMinimumIdleSize) {
         this.connectionMinimumIdleSize = connectionMinimumIdleSize;
+        log.warn("[CTEST][SET-PARAM] " + "ConnectionMinimumIdleSize"); //CTEST
         return this;
     }
     public int getConnectionMinimumIdleSize() {
+        log.warn("[CTEST][GET-PARAM] " + "ConnectionMinimumIdleSize"); //CTEST
         return connectionMinimumIdleSize;
     }
 
@@ -181,10 +195,22 @@ public class SingleServerConfig extends BaseConfig<SingleServerConfig> {
      */
     public SingleServerConfig setDatabase(int database) {
         this.database = database;
+        log.warn("[CTEST][SET-PARAM] " + "Database"); //CTEST
         return this;
     }
     public int getDatabase() {
+        log.warn("[CTEST][GET-PARAM] " + "Database"); //CTEST
         return database;
     }
 
+    private static String getStackTrace() {
+        String stacktrace = " ";
+        for (StackTraceElement element : Thread.currentThread().getStackTrace()) {
+            stacktrace = stacktrace.concat(
+                    element.getClassName() + "#" + element.getMethodName() + "#" + element.getLineNumber() + "\t"
+            );
+        }
+        return stacktrace;
+    }
+
 }
